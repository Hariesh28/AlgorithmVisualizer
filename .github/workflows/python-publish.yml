# This workflow will upload a Python Package to PyPI when a release is created
# For more information, see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-python#publishing-to-package-registries

name: Upload Python Package to PyPI

on:
  release:
    types: [published]  # Trigger when a release is published

permissions:
  contents: read  # Read permission for the contents

jobs:
  release-build:
    runs-on: ubuntu-latest

    steps:
      # Checkout the repository code
      - uses: actions/checkout@v2

      # Set up Python
      - uses: actions/setup-python@v2
        with:
          python-version: "3.x"

      # Build the distribution package
      - name: Build release distributions
        run: |
          python -m pip install --upgrade pip
          pip install build
          python -m build

      # Upload the distribution artifacts for use in the next job
      - name: Upload distributions
        uses: actions/upload-artifact@v2
        with:
          name: release-dists
          path: dist/

  pypi-publish:
    runs-on: ubuntu-latest
    needs:
      - release-build
    permissions:
      id-token: write  # Necessary permission for trusted publishing

    environment:
      name: pypi

    steps:
      # Retrieve the release distributions uploaded in the previous step
      - name: Retrieve release distributions
        uses: actions/download-artifact@v2
        with:
          name: release-dists
          path: dist/

      # Publish the distributions to PyPI
      - name: Publish release distributions to PyPI
        run: |
          python -m pip install --upgrade pip
          pip install twine
          twine upload --repository pypi dist/*
        env:
          TWINE_USERNAME: ${{ secrets.PYPI_USERNAME }}
          TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
